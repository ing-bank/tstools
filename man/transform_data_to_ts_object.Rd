% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DATA_transform_data_to_ts_object.R
\name{transform_data_to_ts_object}
\alias{transform_data_to_ts_object}
\title{Transform a dataset to a time series object}
\usage{
transform_data_to_ts_object(data, seasonal_periods = c(12, 3))
}
\arguments{
\item{data}{A data.table, data.frame or tibble object containing the data to
be used for the forecasting, which should contain the columns 'period',
'col_of_interest', 'grouping' and any other columns to be used as xreg_cols
if applicable.}

\item{seasonal_periods}{A vector of postive integer values indicating the
number of data points that together compose a season (e.g. c(12,3) for
quarterly and yearly seasonality when using monthly data).}
}
\value{
A time series object containing the values for the column_of_interest
  over time, as well as any xreg_cols if applicable.
}
\description{
\code{transform_data_to_ts_object} is a function to transform a set of
forecast data to a time series object.
}
\details{
The function transforms data in the form of a data.table, data.frame or
tibble into a time series object. The data should have at least a period
column, a col_of_interest_column, a grouping column and any other columns to
be used as xreg_cols if applicable. These columns can be created using the
\code{initialize_ts_forecast_data} function. The expected seasonality can be
specified, which are the number of data points that together compose a season
(e.g. 12 for yearly seasonality when using monthly data).
}
\examples{
dummy_hierarchical_ts_data \%>\%
   dplyr::filter(grouping == "location = USA   &   oil_company = CompanyC   &   currency = EUR") \%>\%
   dplyr::select(-level_location, -level_oil_company) \%>\%
 transform_data_to_ts_object()
}
